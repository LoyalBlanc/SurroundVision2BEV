import numpy as np

BACK = {
    "K": np.array([[245.4968495, 0., 482.18824197],
                   [0., 184.25257969, 270.08441413],
                   [0., 0., 1.], ]),
    "D": np.array([0.11812363, -0.03195438, 0.01153246, -0.00275189]),
    # "M": np.array([[8.97626478e-02, -1.20732947e+00, 5.19222106e+02],
    #                [-2.00771457e-15, -1.56523368e+00, 7.21588780e+02],
    #                [-2.00553632e-18, -2.14043333e-03, 1.00000000e+00], ]),
    "src": np.float32([[906, 533], [316, 533], [419, 494], [667, 494]]),
    "tag": np.float32([[285, 815], [680, 822], [695, 910], [280, 908]]),
    "limit": np.concatenate((np.zeros([800, 1000, 3]).astype(np.bool), np.ones([200, 1000, 3]).astype(np.bool)), 0)
}

FRONT = {
    "K": np.array([[248.93772843, 0., 485.54961314],
                   [0., 186.85835832, 270.05246081],
                   [0., 0., 1.], ]),
    "D": np.array([0.09807618, -0.00632247, -0.00477052, 0.0010954]),
    # "M": np.array([[-6.52399315e-02, -1.15684379e+00, 5.87307338e+02],
    #                [4.67462326e-16, -9.07534047e-01, 4.41810641e+02],
    #                [1.19309330e-18, -2.08534781e-03, 1.00000000e+00], ]),
    "src": np.float32([[422, 489], [543, 489], [608, 503], [308, 503]]),
    "tag": np.float32([[270, 50], [695, 55], [695, 295], [272, 300]]),
    "limit": np.concatenate((np.ones([400, 1000, 3]).astype(np.bool), np.zeros([600, 1000, 3]).astype(np.bool)), 0)
}

LEFT = {
    "K": np.array([[245.51486557, 0., 483.83824544],
                   [0., 184.1160814, 271.86370443],
                   [0., 0., 1.], ]),
    "D": np.array([0.10941454, -0.0256855, 0.01000597, -0.00271292]),
    # "M": np.array([[-9.08953209e-03, -1.20570673e+00, 5.74733350e+02],
    #                [1.19327442e-01, -1.18823093e+00, 4.87019094e+02],
    #                [-1.88971561e-05, -2.15106128e-03, 1.00000000e+00], ]),
    "src": np.float32([[620, 487], [884, 548], [500, 548], [500, 487]]),
    "tag": np.float32([[295, 298], [470, 300], [470, 555], [288, 561]]),
    "limit": np.concatenate((np.ones([1000, 480, 3]).astype(np.bool), np.zeros([1000, 520, 3]).astype(np.bool)), 1)
}

RIGHT = {
    "K": np.array([[246.64981534, 0., 483.85871187],
                   [0., 185.07567326, 270.66686412],
                   [0., 0., 1.], ]),
    "D": np.array([0.10853812, -0.02132078, 0.0055893, -0.00145647]),
    # "M": np.array([[-1.45507978e-02, -1.21540041e+00, 5.60293907e+02],
    #                [-1.35589234e-01, -1.17637440e+00, 6.14661667e+02],
    #                [-1.85976454e-05, -2.13111305e-03, 1.00000000e+00], ]),
    "src": np.float32([[120, 548], [312, 506], [500, 510], [500, 548]]),
    "tag": np.float32([[632, 275], [705, 275], [698, 560], [645, 560]]),
    "limit": np.concatenate((np.zeros([1000, 667, 3]).astype(np.bool), np.ones([1000, 333, 3]).astype(np.bool)), 1)
}

ORIGINAL_RESOLUTION = (1080, 1920)
TARGET_RESOLUTION = (1000, 1000)
